# Slack絵文字リアクションBot 要件定義書

## 概要
Slackの特定チャンネルに投稿されたメッセージに対して、RAG（Retrieval-Augmented Generation）の仕組みを用いて
適切な絵文字リアクションを自動的に付与するBotを開発する。

## 技術的要件

### 1. Slack連携
- **連携方式**: Slack App（新規作成）
- **必要な権限スコープ**:
  - `channels:history`: チャンネルメッセージの読み取り
  - `reactions:write`: リアクションの追加

### 2. データベース
- **Vector DB**: PostgreSQL + pgvector拡張
- **運用環境**: ローカル

### 3. 開発環境
- **開発言語**: Python
- **フレームワーク**: 特に指定なし（適切なものを選定）

## 機能要件

### 1. 絵文字管理
- **登録方法**: JSON/CSVファイルで絵文字データを準備し、Pythonスクリプトで一括登録
- **メタデータ構造**:
  ```
  - 絵文字コード: 例 :smile:
  - 説明文/意味: ベクトル化の対象となるテキスト
  - カテゴリ: 感情、行動、物など
  - 感情のトーン: ポジティブ/ネガティブ/ニュートラル
  - 使用シーン: 挨拶、感謝、励まし等
  - 優先度/重み: 共感性を重視した重み付け
  ```

### 2. リアクション対象
- **対象チャンネル**: 特定のチャンネル（複数チャンネルへの拡張性は考慮するが、コードのシンプルさを優先）
- **対象ユーザー**: 全ユーザー
- **対象メッセージ**: チャンネル内のメッセージおよびスレッド内のメッセージ

### 3. リアクションロジック
- **リアクション数**: デフォルト3個（固定）
- **選定方法**: 投稿内容と絵文字説明文の類似度に基づいて上位3個を選択
- **タイミング**: 即時リアクション

### 4. RAG実装
- **埋め込みモデル**: 
  - 第一選択: sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2
  - 代替選択: OpenAI Embeddings（使用可能）
- **類似度計算**: コサイン類似度を使用
- **検索方式**: 投稿内容をベクトル化し、絵文字説明文ベクトルとの類似度を計算

## 運用要件

### 1. インフラ
- **デプロイ先**: オンプレミス
- **可用性**: 現時点では考慮不要

### 2. その他
- **ログ出力**: 現時点では考慮不要
- **管理機能**: 現時点では考慮不要
- **パフォーマンス要件**: 現時点では考慮不要

## 実装優先順位
1. 基本的な絵文字リアクション機能の実装（単一チャンネル対応）
2. RAGによる適切な絵文字選択機能
3. 共感性を考慮した重み付け機能
4. 複数チャンネル対応（将来的な拡張として）

## 制約事項
- コードのシンプルさを優先し、過度な抽象化は避ける
- まずは動作する最小限の実装を目指す
- 拡張性は考慮するが、現時点では実装しない